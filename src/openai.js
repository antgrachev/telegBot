import { OpenAI } from "openai";
import { OPENAI_API_KEY } from "./config.js";

const openai = new OpenAI({ apiKey: OPENAI_API_KEY });

export async function askOpenAI(messages) {
    const request = {
        model: "gpt-4o-mini",
        messages: messages.slice(-10) // –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π
    };

    let retries = 3;
    while (retries > 0) {
        try {
            const response = await openai.chat.completions.create(request);
            return response.choices[0].message.content;
        } catch (error) {
            if (error.code === 'rate_limit_exceeded') {
                console.warn(`‚ö†Ô∏è –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç, –∂–¥–µ–º 30 —Å–µ–∫—É–Ω–¥...`);
                await new Promise(resolve => setTimeout(resolve, 30000));
                retries--;
            } else {
                console.error(`‚ùå –û—à–∏–±–∫–∞ OpenAI:`, error);
                return '–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞ üò¢';
            }
        }
    }
    return '–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
}
